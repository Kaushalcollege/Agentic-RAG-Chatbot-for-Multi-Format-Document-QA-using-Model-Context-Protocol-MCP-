# This is the name of your GitHub Action workflow
name: Deploy to AWS EC2

# This tells GitHub WHEN to run this script.
on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # --- Step 1: Check out your code ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Step 2: Set up Node.js ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # --- Step 3: Build the Frontend ---
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      # --- Step 4: Install Rsync ---
      # We install rsync, a robust file-copying tool
      - name: Install Rsync
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client

      # --- Step 5: Deploy files using Rsync ---
      # This is the new, more reliable file copy step
      - name: Deploy with Rsync
        run: |
          # 1. Create the .ssh directory on the runner
          mkdir -p ~/.ssh

          # 2. Put your private key (from the secret) into a file
          # We use the (RSA converted) 'github-action-key'
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa

          # 3. Set the correct, strict file permissions
          chmod 600 ~/.ssh/id_rsa

          # 4. Get the server's host key to avoid the "Are you sure..." prompt
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

          # 5. Sync all files to the server.
          # -a: archive mode (preserves permissions)
          # -v: verbose
          # -z: compress
          # --delete: deletes old files on the server that aren't in the push
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/id_rsa" \
            . \
            ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }}:/home/ec2-user/Agentic-RAG-Chatbot-for-Multi-Format-Document-QA-using-Model-Context-Protocol-MCP-

      # --- Step 6: Restart the Server on EC2 ---
      # This step is the same as before
      - name: Restart Server on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          # We use the (RSA converted) 'github-action-key'
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            PROJECT_PATH="/home/ec2-user/Agentic-RAG-Chatbot-for-Multi-Format-Document-QA-using-Model-Context-Protocol-MCP-"

            cd $PROJECT_PATH/backend

            sudo pip3 install -r requirements.txt

            ps aux | grep uvicorn | grep -v grep | awk '{print $2}' | xargs -r kill

            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 &
